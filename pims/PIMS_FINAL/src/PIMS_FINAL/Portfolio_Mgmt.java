/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PIMS_FINAL;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author daksh
 */
public class Portfolio_Mgmt extends javax.swing.JFrame {

    /**
     * Creates new form Portfolio_Mgmt
     */
    public Portfolio_Mgmt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("pims_new?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        portfolioQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Portfolio p");
        portfolioList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : portfolioQuery.getResultList();
        securityQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT s FROM Security s");
        securityList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : securityQuery.getResultList();
        portfolioQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Portfolio p");
        portfolioList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : portfolioQuery1.getResultList();
        portfolioQuery2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Portfolio p");
        portfolioList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : portfolioQuery2.getResultList();
        portfolioQuery3 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Portfolio p");
        portfolioList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : portfolioQuery3.getResultList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ddb1 = new javax.swing.JComboBox();
        ddb2 = new javax.swing.JComboBox();
        Buy_Button = new javax.swing.JButton();
        disp_but = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        tf1 = new javax.swing.JTextField();
        Sell_Button = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Personal Investment Management System");

        jLabel2.setText("Select Portfolio");

        jLabel3.setText("Select Security");

        jLabel4.setText("Perform Transaction");

        jLabel5.setText("Display Information");

        ddb1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2" }));
        ddb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddb1ActionPerformed(evt);
            }
        });

        ddb2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1001", "1002" }));

        Buy_Button.setText("Buy");
        Buy_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Buy_ButtonActionPerformed(evt);
            }
        });

        disp_but.setText("OK");
        disp_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disp_butActionPerformed(evt);
            }
        });

        jLabel8.setText("Number of shares");

        Sell_Button.setText("Sell");
        Sell_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sell_ButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Customer Panel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(45, 45, 45)
                        .addComponent(disp_but))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(45, 45, 45))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(18, 18, 18)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ddb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ddb2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tf1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(Sell_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Buy_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                            .addGap(0, 0, Short.MAX_VALUE))))))
                        .addGap(0, 59, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ddb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ddb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Buy_Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Sell_Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(disp_but))
                .addGap(111, 111, 111))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ddb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddb1ActionPerformed

    private void disp_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disp_butActionPerformed
            // TODO add your handling code here:
            try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/pims_new", "root", "");
            String portf=ddb1.getSelectedItem().toString();
            String secur=ddb2.getSelectedItem().toString();
            Statement stmt=con.createStatement();
            int portfol=Integer.parseInt(portf);
            int securit=Integer.parseInt(secur);
            ResultSet rs = stmt.executeQuery("select * from portfolio where pid='" + portfol + "'");
            while(rs.next())
            {
                //Display d1=new Display();
                //d1.setVisible(true);
                JOptionPane.showMessageDialog(disp_but,"PID:"+rs.getInt(1)+"\n Name:"+rs.getString(2)+"\n Stock-ID:"+rs.getInt(3)+"\n Number of shares:"+rs.getInt(4));
                System.out.println("PID: "+ rs.getInt(1));
                System.out.println("Name: "+ rs.getString(2));
                System.out.println("Stock ID: " + rs.getInt(3));
                System.out.println("Number of Shares: " + rs.getInt(4));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex);
        }
            
                
        
        
    }//GEN-LAST:event_disp_butActionPerformed

    private void Buy_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Buy_ButtonActionPerformed
        // TODO add your handling code here:
            if(evt.getSource()==Buy_Button)
            {
            String portf=ddb1.getSelectedItem().toString();
            String secur=ddb2.getSelectedItem().toString();
            int number=Integer.parseInt(tf1.getText());
            int portfol=Integer.parseInt(portf);
            int securit=Integer.parseInt(secur);
            System.out.println("Value of portfolio:"+portf);
            System.out.println("Value of security:"+secur);
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/pims_new", "root", "");
                Statement stmt=con.createStatement();
                //ResultSet rs=stmt.executeQuery("update portfolio  )
                PreparedStatement ps = con.prepareStatement("update portfolio set nShares = nShares+" + number + "  where sid='" + securit + "' and pid=" + portfol);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(Buy_Button, "Purchase Successful.");
            }
            catch (ClassNotFoundException | SQLException ex)
            {
            System.out.println(ex);
            }            
            }
       
    }//GEN-LAST:event_Buy_ButtonActionPerformed

    private void Sell_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sell_ButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==Sell_Button)
            {
            String portf=ddb1.getSelectedItem().toString();
            String secur=ddb2.getSelectedItem().toString();
            int portfol=Integer.parseInt(portf);
            int securit=Integer.parseInt(secur);
            int number=Integer.parseInt(tf1.getText());
            //System.out.println("Value of security:"+secur);
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/pims_new", "root", "");
                Statement stmt=con.createStatement();
                //ResultSet rs=stmt.executeQuery("update portfolio  )
                PreparedStatement ps = con.prepareStatement("update portfolio set nShares = nShares-" + number + "  where sid='" + securit + "' and pid=" + portfol);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(Sell_Button, "Selling Successful.");
            }
            catch (ClassNotFoundException | SQLException ex)
            {
            System.out.println(ex);
            }            
            }
    }//GEN-LAST:event_Sell_ButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Portfolio_Mgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Portfolio_Mgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Portfolio_Mgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Portfolio_Mgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Portfolio_Mgmt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buy_Button;
    private javax.swing.JButton Sell_Button;
    private javax.swing.JComboBox ddb1;
    private javax.swing.JComboBox ddb2;
    private javax.swing.JButton disp_but;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private java.util.List<PIMS_FINAL.Portfolio> portfolioList;
    private java.util.List<PIMS_FINAL.Portfolio> portfolioList1;
    private java.util.List<PIMS_FINAL.Portfolio> portfolioList2;
    private java.util.List<PIMS_FINAL.Portfolio> portfolioList3;
    private javax.persistence.Query portfolioQuery;
    private javax.persistence.Query portfolioQuery1;
    private javax.persistence.Query portfolioQuery2;
    private javax.persistence.Query portfolioQuery3;
    private java.util.List<PIMS_FINAL.Security> securityList;
    private javax.persistence.Query securityQuery;
    private javax.swing.JTextField tf1;
    // End of variables declaration//GEN-END:variables
}
